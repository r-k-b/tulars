name: "Build with Nix"
on:
    push:

    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
    contents: read
    pages: write
    id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
    group: "pages"
    cancel-in-progress: false

jobs:
    buildWithNix:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: cachix/install-nix-action@v31
              with:
                  nix_path: nixpkgs=channel:nixos-unstable
            - uses: DeterminateSystems/magic-nix-cache-action@v13
            - name: Keep the Flake up-to-date and healthy
              uses: DeterminateSystems/flake-checker-action@v12
              with:
                  fail-mode: true
            - run: nix flake check
            - run: nix build .
            - name: Setup Pages
              uses: actions/configure-pages@v5
            - name: Upload GitHub Pages artifact
              uses: actions/upload-pages-artifact@v3.0.1
              with:
                  path: "result/"
            - name: Deploy to GitHub Pages
              id: deployment
              uses: actions/deploy-pages@v4
